
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Creative Stopwatch & Live Clock</title>
  <style>
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
      font-family: Arial, sans-serif;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      background: #ece9e6;
      overflow: hidden;
    }

    /* Animated circles background */
    .bg-circles {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      pointer-events: none;
      z-index: 0;
      overflow: hidden;
    }

    .circle {
      position: absolute;
      border-radius: 50%;
      opacity: 0.25;
      animation: float 12s infinite alternate ease-in-out;
    }

    .circle1 { width: 220px; height: 220px; background: #f39c12; left: 10vw; top: 12vh; animation-delay: 0s; }
    .circle2 { width: 110px; height: 110px; background: #009ffd; right: 13vw; top: 16vh; animation-delay: 2s; }
    .circle3 { width: 320px; height: 320px; background: #38e492; left: 60vw; top: 66vh; animation-delay: 3.5s; }
    .circle4 { width: 180px; height: 180px; background: #ff5e62; left: 77vw; top: 35vh; animation-delay: 4.5s; }
    .circle5 { width: 100px; height: 100px; background: #fff700; left: 5vw; top: 74vh; animation-delay: 7s; }

    @keyframes float {
      from { transform: translateY(0); }
      to   { transform: translateY(-40px); }
    }

    /* Main container */
    .container {
      background: rgba(255,255,255,0.93);
      padding: 2.2em 2.5em;
      border-radius: 18px;
      box-shadow: 0 4px 24px rgba(0,0,0,0.14);
      text-align: center;
      width: 350px;
      position: relative;
      z-index: 3;
    }

    #liveclock {
      font-size: 1.3em;
      margin-bottom: 1.2em;
      color: #222;
      letter-spacing: 1px;
      font-family: 'Courier New', Courier, monospace;
    }

    #display {
      font-size: 3em;
      margin-bottom: 1em;
      font-variant-numeric: tabular-nums;
    }

    .controls-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.5em;
    }

    .controls-row button {
      font-size: 1em;
      padding: 0.65em 2em;
      border: none;
      border-radius: 5px;
      background: #333;
      color: #fff;
      cursor: pointer;
      transition: background 0.2s;
    }

    .controls-row button:hover {
      background: #f39c12;
      color: #222;
    }

    .lap-btn-row {
      display: flex;
      justify-content: center;
      margin-top: 0.5em;
    }

    .lap-list {
      margin-top: 1em;
      text-align: left;
      font-size: 0.9em;
      max-height: 100px;
      overflow-y: auto;
    }
  </style>
</head>
<body>
  <div class="bg-circles">
    <div class="circle circle1"></div>
    <div class="circle circle2"></div>
    <div class="circle circle3"></div>
    <div class="circle circle4"></div>
    <div class="circle circle5"></div>
  </div>

  <div class="container">
    <div id="liveclock">00:00:00</div>
    <div id="display">00:00:00</div>
    <div class="controls-row">
      <button onclick="startStop()">Start</button>
      <button onclick="reset()">Reset</button>
    </div>
    <div class="lap-btn-row">
      <button onclick="lap()">Lap</button>
    </div>
    <div class="lap-list" id="laps"></div>
  </div>

  <script>
    // Live Clock
    function updateClock() {
      const now = new Date();
      const time = now.toLocaleTimeString();
      document.getElementById("liveclock").innerText = time;
    }
    setInterval(updateClock, 1000);
    updateClock();

    // Stopwatch
    let timer;
    let running = false;
    let startTime;
    let elapsed = 0;

    function startStop() {
      if (!running) {
        startTime = Date.now() - elapsed;
        timer = setInterval(updateDisplay, 100);
        running = true;
      } else {
        clearInterval(timer);
        elapsed = Date.now() - startTime;
        running = false;
      }
    }

    function reset() {
      clearInterval(timer);
      elapsed = 0;
      running = false;
      updateDisplay();
      document.getElementById("laps").innerHTML = "";
    }

    function updateDisplay() {
      elapsed = Date.now() - startTime;
      let ms = Math.floor((elapsed % 1000) / 10);
      let sec = Math.floor((elapsed / 1000) % 60);
      let min = Math.floor((elapsed / (1000 * 60)) % 60);
      let hr = Math.floor((elapsed / (1000 * 60 * 60)));

      document.getElementById("display").innerText =
        `${pad(hr)}:${pad(min)}:${pad(sec)}.${pad(ms)}`;
    }

    function pad(num) {
      return num.toString().padStart(2, '0');
    }

    function lap() {
      if (!running) return;
      const lapTime = document.getElementById("display").innerText;
      const lapItem = document.createElement("div");
      lapItem.textContent = "Lap: " + lapTime;
      document.getElementById("laps").appendChild(lapItem);
    }
  </script>
</body>
</html>
